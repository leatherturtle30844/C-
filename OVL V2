#include <iostream>
#include <windows.h>
#include <cstdlib> 
#include <string>
using namespace std;

// Função para pausar a execução por um período de tempo
void pausar(int milissegundos) {
    Sleep(milissegundos);
}
  

void fim(){
	system("cls");
}
//Função para o funcionamento do carregar
void carregar(){
	 cout << "C";
    pausar(120);
    cout << "A";
    pausar(120);
    cout << "R";
    pausar(120);
    cout << "R";
    pausar(120);
    cout << "E";
    pausar(120);
    cout << "G";
    pausar(120);
    cout << "A";
    pausar(120);
    cout << "N";
    pausar(120);
    cout << "D";
    pausar(120);
    cout << "O";
    pausar(120);
system("cls");
    cout << "CARREGANDO";
    pausar(120);
    cout << ".";
    pausar(500);
    cout << ".";
    pausar(500);
    cout << ".";
    pausar(500); 
system("cls");
	cout << "CARREGANDO";
	cout << ".";
    pausar(500);
    cout << ".";
    pausar(500);
    cout << ".";
    pausar(500); 
    system("cls");
cout << "CARREGANDO";
	cout << ".";
    pausar(500);
    cout << ".";
    pausar(500);
    cout << ".";
    pausar(500); 
    system("cls");  
  	cout << "CARREGANDO";
	cout << ".";
    pausar(500);
    cout << ".";
    pausar(500);
    cout << ".";
    pausar(500); 
    system("cls"); 
}

int main() {
	setlocale (LC_ALL,"portuguese");
carregar();
//Tutorial
/*pausar(120);
cout << "B";
pausar(120);
cout << "e";
pausar(120);
cout << "m";
pausar(120);
cout << "-";
pausar(120);
cout << "v";
pausar(120);
cout << "i";
pausar(120);
cout << "n";
pausar(120);
cout << "d";
pausar(120);
cout << "o";
pausar(120);
cout << " ";
pausar(120);
cout << "a";
pausar(120);
cout << "o";
pausar(120);
cout << " ";
pausar(120);
cout << "j";
pausar(120);
cout << "o";
pausar(120);
cout << "g";
pausar(120);
cout << "o";
pausar(120);
cout << " ";
pausar(120);
cout << "d";
pausar(120);
cout << "o";
pausar(120);
cout << " ";
pausar(120);
cout << "C";
pausar(120);
cout << "a";
pausar(120);
cout << "r";
pausar(120);
cout << "n";
pausar(120);
cout << "e";
pausar(120);
cout << "i";
pausar(120);
cout << "r";
pausar(120);
cout << "o";
pausar(120);
cout << " ";
pausar(120);
cout << "e";
pausar(120);
cout << " ";
pausar(120);
cout << "d";
pausar(120);
cout << "o";
pausar(120);
cout << " ";
pausar(120);
cout << "L";
pausar(120);
cout << "o";
pausar(120);
cout << "b";
pausar(120);
cout << "o";
pausar(120);
cout << "!";
pausar(120);
cout << "\n";
pausar(120);

    

    

      
cout << "          V";
pausar(200);
cout << "   A";
pausar(200);
cout << "   M";
pausar(200);
cout << "   O";
pausar(200);
cout << "   S";
pausar(200);
cout << " ";
pausar(200);
cout << "   C";
pausar(200);
cout << "   O";
pausar(200);
cout << "   M";
pausar(200);
cout << "   E";
pausar(200);
cout << "   Ç";
pausar(200);
cout << "   A";
pausar(200);
cout << "   R";
pausar(200);
cout << "\n";
pausar(200);

    cout << "O ";
pausar(70);
cout << "b";
pausar(70);
cout << "a";
pausar(70);
cout << "r";
pausar(70);
cout << "q";
pausar(70);
cout << "u";
pausar(70);
cout << "i";
pausar(70);
cout << "n";
pausar(70);
cout << "h";
pausar(70);
cout << "o";
pausar(70);
cout << " ";
pausar(70);
cout << "d";
pausar(70);
cout << "o";
pausar(70);
cout << " ";
pausar(70);
cout << "c";
pausar(70);
cout << "a";
pausar(70);
cout << "m";
pausar(70);
cout << "p";
pausar(70);
cout << "o";
pausar(70);
cout << "n";
pausar(70);
cout << "ê";
pausar(70);
cout << "s";
pausar(70);
cout << " ";
pausar(70);
cout << "c";
pausar(70);
cout << "o";
pausar(70);
cout << "m";
pausar(70);
cout << "p";
pausar(70);
cout << "o";
pausar(70);
cout << "r";
pausar(70);
cout << "t";
pausar(70);
cout << "a";
pausar(70);
cout << " ";
pausar(70);
cout << "a";
pausar(70);
cout << "p";
pausar(70);
cout << "e";
pausar(70);
cout << "n";
pausar(70);
cout << "a";
pausar(70);
cout << "s";
pausar(70);
cout << " ";
pausar(70);
cout << "u";
pausar(70);
cout << "m";
pausar(70);
cout << " ";
pausar(70);
cout << "í";
pausar(70);
cout << "t";
pausar(70);
cout << "e"; int Fazendeiro = 0; // 0 lado em que se inciia, 1 lado em que o fazendeiro vai
    int ovelha = 1, lobo = 2, alface = 3;
pausar(70);
cout << "m";
pausar(70);
cout << ", ";
pausar(70);
cout << "a";
pausar(70);
cout << "l";
pausar(70);
cout << "é";
pausar(70);
cout << "m";
pausar(70);
cout << " ";
pausar(70);
cout << "d";
pausar(70);
cout << "e";
pausar(70);
cout << "l";
pausar(70);
cout << "e";
pausar(70);
cout << " ";
pausar(70);
cout << "p";
pausar(70);
cout << "r";
pausar(70);
cout << "ó";
pausar(70);
cout << "p";
pausar(70);
cout << "r";
pausar(70);
cout << "i";
pausar(70);
cout << "o";
pausar(70);
cout << ".\n";
pausar(70);

cout << "\nO ";
pausar(70);
cout << "b";
pausar(70);
cout << "a";
pausar(70);
cout << "r";
pausar(70);
cout << "q";
pausar(70);
cout << "u";
pausar(70);
cout << "i";
pausar(70);
cout << "n";
pausar(70);
cout << "h";
pausar(70);
cout << "o";
pausar(70);
cout << " ";
pausar(70);
cout << "p";
pausar(70);
cout << "o";
pausar(70);
cout << "d";
pausar(70);
cout << "e";
pausar(70);
cout << " ";
pausar(70);
cout << "l";
pausar(70);
cout << "e";
pausar(70);
cout << "v";
pausar(70);
cout << "a";
pausar(70);
cout << "r";
pausar(70);
cout << " ";
pausar(70);
cout << "e";
pausar(70);
cout << " ";
pausar(70);
cout << "t";
pausar(70);
cout << "r";
pausar(70);
cout << "a";
pausar(70);
cout << "z";
pausar(70);
cout << "e";
pausar(70);
cout << "r";
pausar(70);
cout << " ";
pausar(70);
cout << "í";
pausar(70);
cout << "t";
pausar(70);
cout << "e";
pausar(70);
cout << "n";
pausar(70);
cout << "s";
pausar(70);
cout << ". ";
pausar(70);
cout << "V";
pausar(70);
cout << "o";
pausar(70);
cout << "c";
pausar(70);
cout << "ê";
pausar(70);
cout << " ";
pausar(70);
cout << "d";
pausar(70);
cout << "e";
pausar(70);
cout << "v";
pausar(70);
cout << "e";
pausar(70);
cout << " ";
pausar(70);
cout << "f";
pausar(70);
cout << "i";
pausar(70);
cout << "c";
pausar(70);
cout << "a";
pausar(70);
cout << "r";
pausar(70);
cout << " ";
pausar(70);
cout << "a";
pausar(70);
cout << "t";
pausar(70);
cout << "e";
pausar(70);
cout << "n";
pausar(70);
cout << "t";
pausar(70);
cout << "o";
pausar(70);
cout << " ";
pausar(70);
cout << "à";
pausar(70);
cout << "s";
pausar(70);
cout << " ";
pausar(70);
cout << "s";
pausar(70);
cout << "e";
pausar(70);
cout << "g";
pausar(70);
cout << "u";
pausar(70);
cout << "i";
pausar(70);
cout << "n";
pausar(70);
cout << "t";
pausar(70);
cout << "e";
pausar(70);
cout << "s";
pausar(70);
cout << ": ";
pausar(70);
cout << "\n";


cout << "\nO ";
pausar(70);
cout << "l";
pausar(70);
cout << "o";
pausar(70);
cout << "b";
pausar(70);
cout << "o";
pausar(70);
cout << " ";
pausar(70);
cout << "d";
pausar(70);
cout << "e";
pausar(70);
cout << "v";
pausar(70);
cout << "o";
pausar(70);
cout << "r";
pausar(70);
cout << "a";
pausar(70);
cout << " ";
pausar(70);
cout << "a";
pausar(70);
cout << " ";
pausar(70);
cout << "o";
pausar(70);
cout << "v";
pausar(70);
cout << "e";
pausar(70);
cout << "l";
pausar(70);
cout << "h";
pausar(70);
cout << "a";
pausar(70);
cout << " ";
pausar(70);
cout << "s";
pausar(70);
cout << "e";
pausar(70);
cout << " ";
pausar(70);
cout << "o";
pausar(70);
cout << "s";
pausar(70);
cout << " ";
pausar(70);
cout << "d";
pausar(70);
cout << "o";
pausar(70);
cout << "i";
pausar(70);
cout << "s";
pausar(70);
cout << " ";
pausar(70);
cout << "f";
pausar(70);
cout << "i";
pausar(70);
cout << "c";
pausar(70);
cout << "a";
pausar(70);
cout << "r";
pausar(70);
cout << "e";
pausar(70);
cout << "m";
pausar(70);
cout << " ";
pausar(70);
cout << "s";
pausar(70);
cout << "o";
pausar(70);
cout << "z";
pausar(70);
cout << "i";
pausar(70);
cout << "n";
pausar(70);
cout << "h";
pausar(70);
cout << "o";
pausar(70);
cout << "s";
pausar(70);
cout << " ";
pausar(70);
cout << "e";
pausar(70);
cout << "\n";
pausar(70);

cout << "\nA ";
pausar(70);
cout << "o";
pausar(70);
cout << "v";
pausar(70);
cout << "e";
pausar(70);
cout << "l";
pausar(70);
cout << "h";
pausar(70);
cout << "a";
pausar(70);
cout << " ";
pausar(70);
cout << "c";
pausar(70);
cout << "o";
pausar(70);
cout << "m";
pausar(70);
cout << "e";
pausar(70);
cout << " ";
pausar(70);
cout << "o";
pausar(70);
cout << " ";
pausar(70);
cout << "c";
pausar(70);
cout << "o";
pausar(70);
cout << "u";
pausar(70);
cout << "v";
pausar(70);
cout << "e";
pausar(70);
cout << " ";
pausar(70);
cout << "s";
pausar(70);
cout << "e";
pausar(70);
cout << " ";
pausar(70);
cout << "f";
pausar(70);
cout << "i";
pausar(70);
cout << "c";
pausar(70);
cout << "a";
pausar(70);
cout << "r";
pausar(70);
cout << " ";
pausar(70);
cout << "s";
pausar(70);
cout << "o";
pausar(70);
cout << "z";
pausar(70);
cout << "i";
pausar(70);
cout << "n";
pausar(70);
cout << "h";
pausar(70);
cout << "a";
pausar(70);
cout << " ";
pausar(70);
cout << "c";
pausar(70);
cout << "o";
pausar(70);
cout << "m";
pausar(70);
cout << " ";
pausar(70);
cout << "e";
pausar(70);
cout << "l";
pausar(70);
cout << "e";
pausar(70);
cout << "\n";
pausar(70);

cout << "\nE";
pausar(70);
cout << "s";
pausar(70);
cout << "c";
pausar(70);
cout << "o";
pausar(70);
cout << "l";
pausar(70);
cout << "h";
pausar(70);
cout << "a";
pausar(70);
cout << " ";
pausar(70);
cout << "o";
pausar(70);
cout << " ";
pausar(70);
cout << "í";
pausar(70);
cout << "t";
pausar(70);
cout << "e";
pausar(70);
cout << "m";
pausar(70);
cout << " ";
pausar(70);
cout << "q";
pausar(70);
cout << "u";
pausar(70);
cout << "e";
pausar(70);
cout << " ";
pausar(70);
cout << "d";
pausar(70);
cout << "e";
pausar(70);
cout << "s";
pausar(70);
cout << "e";
pausar(70);
cout << "j";
pausar(70);
cout << "a";
pausar(70);
cout << " ";
pausar(70);
cout << "l";
pausar(70);
cout << "e";
pausar(70);
cout << "v";
pausar(70);
cout << "a";
pausar(70);
cout << "r";
pausar(70);
cout << " ";
pausar(70);
cout << "p";
pausar(70);
cout << "a";
pausar(70);
cout << "r";
pausar(70);
cout << "a";
pausar(70);
cout << " ";
pausar(70);
cout << "o";
pausar(70);
cout << " ";
pausar(70);
cout << "o";
pausar(70);
cout << "u";
pausar(70);
cout << "t";
pausar(70);
cout << "r";
pausar(70);
cout << "o";
pausar(70);
cout << " ";
pausar(70);
cout << "l";
pausar(70);
cout << "a";
pausar(70);
cout << "d";
pausar(70);
cout << "o";
pausar(70);
cout << " ";
pausar(70);
cout << "e";
pausar(70);
cout << ", ";
pausar(70);
cout << "e";
pausar(70);
cout << "m";
pausar(70);
cout << " ";
pausar(70);
cout << "s";
pausar(70);
cout << "e";
pausar(70);
cout << "g";
pausar(70);
cout << "u";
pausar(70);
cout << "i";
pausar(70);
cout << "d";
pausar(70);
cout << "a";
pausar(70);
cout << ", ";
pausar(70);
cout << "E";
pausar(70);
cout << "s";
pausar(70);
cout << "c";
pausar(70);
cout << "o";
pausar(70);
cout << "l";
pausar(70);
cout << "h";
pausar(70);
cout << "a";
pausar(70);
cout << " ";
pausar(70);
cout << "o";
pausar(70);
cout << " ";
pausar(70);
cout << "b";
pausar(70);
cout << "a";
pausar(70);
cout << "r";
pausar(70);
cout << "c";
pausar(70);
cout << "o";
pausar(70);
cout << ".";
pausar(70);
cout << "\"";
pausar(70);
cout << "\n";
cout << "\n";
cout << "\n";

*/
//JOGO
// Inicialização das variáveis
  bool jogoFinalizado = false;

    while (!jogoFinalizado) {
        // Inicializando variáveis para representar o estado inicial do jogo
        bool ovelhaNoBarco = false;
        bool loboNoBarco = false;
        bool repolhoNoBarco = false;
        bool ladoInicial[] = {ovelhaNoBarco, loboNoBarco, repolhoNoBarco};

        while (true) {
            // Mostra o estado atual do jogo
            cout << "Estado atual do lado inicial do rio:\n";
            cout << "Ovelha: " << (ovelhaNoBarco ? "No barco" : "No lado inicial") << endl;
            cout << "Lobo: " << (loboNoBarco ? "No barco" : "No lado inicial") << endl;
            cout << "Repolho: " << (repolhoNoBarco ? "No barco" : "No lado inicial") << endl << endl;

            // Solicita ao jogador o próximo movimento
            string proximoMovimento;
            cout << "Digite o próximo movimento (ovelha, lobo, repolho, ou 'fim' para finalizar o jogo): ";
            cin >> proximoMovimento;

            // Verifica se o jogador digitou 'fim' para finalizar o jogo
            if (proximoMovimento == "fim") {
                cout << "\nFim do jogo.\n";
                jogoFinalizado = true;
                break;
            }

            // Realiza o movimento conforme a escolha do jogador
            if (proximoMovimento == "ovelha") {
                if (loboNoBarco || repolhoNoBarco) {
                    cout << "Erro! A ovelha não pode ficar sozinha com o lobo ou o repolho.\n\n";
                } else {
                    ovelhaNoBarco = !ovelhaNoBarco;
                }
            } else if (proximoMovimento == "lobo") {
                if (ovelhaNoBarco) {
                    cout << "Erro! A ovelha não pode ficar sozinha com o lobo.\n\n";
                } else {
                    loboNoBarco = !loboNoBarco;
                }
            } else if (proximoMovimento == "repolho") {
                if (ovelhaNoBarco) {
                    cout << "Erro! A ovelha não pode ficar sozinha com o repolho.\n\n";
                } else {
                    repolhoNoBarco = !repolhoNoBarco;
                }
            } else {
                cout << "Movimento inválido! Escolha 'ovelha', 'lobo', 'repolho' ou 'fim'.\n\n";
            }

            // Verifica se o jogo foi finalizado com sucesso
            if (!ovelhaNoBarco && loboNoBarco && repolhoNoBarco) {
                cout << "Parabéns! Você finalizou o jogo com sucesso.\n";
                jogoFinalizado = true;
                break;
            }
        }
    }

    return 0;
}


